# ==================================================================================================
#     Header
# ==================================================================================================

language: cpp
sudo: required
cache: apt

branches:
  only:
    - master
    - misc

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    update: true
    # sources: &sources

# ==================================================================================================
#     Matrix
# ==================================================================================================

jobs:
  include:

    # # ==========================================================================
    # #     trusty
    # # ==========================================================================
    #
    # # default
    # - os: linux
    #   dist: trusty
    #   name: "trusty"
    #
    # # --------------------------------------------------------------------------
    # #     trusty / gcc
    # # --------------------------------------------------------------------------
    #
    # # Cannot use gcc 4.8 because of missing regex implementation.
    # # - os: linux
    # #   dist: trusty
    # #   addons:
    # #     apt:
    # #       packages:
    # #       - g++-4.8
    # #   env: COMPILER=g++-4.8
    #
    # - os: linux
    #   dist: trusty
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #       packages:
    #       - g++-4.9
    #   env: COMPILER=g++-4.9
    #
    # - os: linux
    #   dist: trusty
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #       packages:
    #       - g++-5
    #   env: COMPILER=g++-5
    #
    # - os: linux
    #   dist: trusty
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #       packages:
    #       - g++-6
    #   env: COMPILER=g++-6
    #
    # - os: linux
    #   dist: trusty
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #       packages:
    #       - g++-7
    #   env: COMPILER=g++-7
    #
    # - os: linux
    #   dist: trusty
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #       packages:
    #       - g++-8
    #   env: COMPILER=g++-8
    #
    # - os: linux
    #   dist: trusty
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #       packages:
    #       - g++-9
    #   env: COMPILER=g++-9

    # --------------------------------------------------------------------------
    #     trusty / clang
    # --------------------------------------------------------------------------

    - os: linux
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
          - clang-3.5
      env: COMPILER=clang++-3.5 OPENMP=OFF

    - os: linux
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
          - clang-3.6
      env: COMPILER=clang++-3.6 OPENMP=OFF

    - os: linux
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
          - clang-3.7
      env: COMPILER=clang++-3.7 OPENMP=OFF

    - os: linux
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
          - clang-3.8
          - libiomp-dev
      env: COMPILER=clang++-3.8

    - os: linux
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
          - clang-3.9
          - libiomp-dev
      env: COMPILER=clang++-3.9

    # # ==========================================================================
    # #     xenial
    # # ==========================================================================
    #
    # # default
    # - os: linux
    #   dist: xenial
    #   name: "xenial"
    #
    # # --------------------------------------------------------------------------
    # #     xenial / gcc
    # # --------------------------------------------------------------------------
    #
    # # Cannot use gcc 4.8 because of missing regex implementation.
    # # - os: linux
    # #   dist: xenial
    # #   addons:
    # #     apt:
    # #       packages:
    # #       - g++-4.8
    # #   env: COMPILER=g++-4.8
    #
    # - os: linux
    #   dist: xenial
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #       packages:
    #       - g++-4.9
    #   env: COMPILER=g++-4.9
    #
    # - os: linux
    #   dist: xenial
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #       packages:
    #       - g++-5
    #   env: COMPILER=g++-5
    #
    # - os: linux
    #   dist: xenial
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #       packages:
    #       - g++-6
    #   env: COMPILER=g++-6
    #
    # - os: linux
    #   dist: xenial
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #       packages:
    #       - g++-7
    #   env: COMPILER=g++-7
    #
    # - os: linux
    #   dist: xenial
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #       packages:
    #       - g++-8
    #   env: COMPILER=g++-8
    #
    # - os: linux
    #   dist: xenial
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #       packages:
    #       - g++-9
    #   env: COMPILER=g++-9
    #
    # # --------------------------------------------------------------------------
    # #     xenial / clang
    # # --------------------------------------------------------------------------
    #
    # - os: linux
    #   dist: xenial
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #       packages:
    #       - clang-3.5
    #   env: COMPILER=clang++-3.5 OPENMP=OFF
    #
    # - os: linux
    #   dist: xenial
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #       packages:
    #       - clang-3.6
    #   env: COMPILER=clang++-3.6 OPENMP=OFF
    #
    # - os: linux
    #   dist: xenial
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #       packages:
    #       - clang-3.7
    #   env: COMPILER=clang++-3.7 OPENMP=OFF
    #
    # - os: linux
    #   dist: xenial
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #       packages:
    #       - clang-3.8
    #       - libiomp-dev
    #   env: COMPILER=clang++-3.8
    #
    # - os: linux
    #   dist: xenial
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #       packages:
    #       - clang-3.9
    #       - libiomp-dev
    #   env: COMPILER=clang++-3.9
    #
    # - os: linux
    #   dist: xenial
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #       packages:
    #       - clang-4.0
    #       - libiomp-dev
    #   env: COMPILER=clang++-4.0
    #
    # - os: linux
    #   dist: xenial
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #       packages:
    #       - clang-5.0
    #       - libiomp-dev
    #   env: COMPILER=clang++-5.0
    #
    # - os: linux
    #   dist: xenial
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #       packages:
    #       - clang-6.0
    #       - libiomp-dev
    #   env: COMPILER=clang++-6.0
    #
    # # ==========================================================================
    # #     bionic
    # # ==========================================================================
    #
    # # default
    # - os: linux
    #   dist: bionic
    #   name: "bionic"
    #
    # # --------------------------------------------------------------------------
    # #     bionic / gcc
    # # --------------------------------------------------------------------------
    #
    # - os: linux
    #   dist: bionic

    # ==========================================================================
    #     osx
    # ==========================================================================

    - os: osx
      osx_image: xcode8.3
      env: OPENMP=OFF

    - os: osx
      osx_image: xcode9.2
      env: OPENMP=OFF

    - os: osx
      osx_image: xcode10
      env: OPENMP=OFF

    - os: osx
      osx_image: xcode11
      env: OPENMP=OFF

    - os: osx
      osx_image: xcode11.3
      env: OPENMP=OFF

  # The default trusty gcc version is 4.8, which does not properly support regex.
  # As of now, it still compiles, but some tests that need functions with regexes fail.
  # This is okay, as we do not need that level of compatibility.
  allow_failures:
    - name: trusty

# ==================================================================================================
#     Install
# ==================================================================================================

before_install:

  - echo -e "\e[1;34mentering before_install\e[0m"
  - echo ${TRAVIS_OS_NAME}

  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      echo "adding toolchain"
      sudo apt-get install -y software-properties-common
      sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
      sudo apt-get update -qq
    fi

  # The following homebrew packages are not on the path by default. We need to prepend them to the
  # path explicitly, so that clang can find OpenMP.
  - |
    if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      echo "exporting llvm path"
      export PATH="$(brew --prefix llvm)/bin:$PATH";
    fi

  - echo -e "\e[1;34mexiting before_install\e[0m"

install:

  - if [[ "${COMPILER}" == "default" ]]; then COMPILER=clang++-7; fi

# ==================================================================================================
#     Script
# ==================================================================================================

script:
  - echo -e "\e[1;34mentering script\e[0m"

  # List available gcc and clang versions
  # - echo -e "travis_fold:start:available compilers\033[33;1m$2\033[0m"
  # - apt-cache pkgnames g++ | sort
  # - apt-cache pkgnames clang | sort
  # - echo -e "\ntravis_fold:end:available compilers\r"

  # travis environment
  - echo "PATH = $PATH"
  - echo "HOME = $HOME"
  - echo ${CC}
  - echo ${CXX}
  - echo ${COMPILER}
  - ${CXX} --version
  - ${COMPILER} --version
  - cmake --version

  - export GENESIS_DEBUG=1
  - mkdir build
  - cd build

  - export GENESIS_USE_OPENMP=ON
  - if [[ "${OPENMP}" == "OFF" ]]; then export GENESIS_USE_OPENMP=OFF; fi

  - cmake -DCMAKE_CXX_COMPILER=$COMPILER -DGENESIS_USE_OPENMP=$GENESIS_USE_OPENMP ..
  - make -j 4
  - cd ..
  - ./bin/test/genesis_tests

  - echo -e "\e[1;34mexiting script\e[0m"
