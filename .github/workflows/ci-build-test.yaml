# ==================================================================================================
#     Header
# ==================================================================================================

name: ci-build-test
on:
  pull_request:
  push:
    branches:
      - master
      - misc

# ==================================================================================================
#     Jobs
# ==================================================================================================

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}

    # ==========================================================================
    #     Matrix
    # ==========================================================================

    strategy:
      fail-fast: false

      matrix:
        os:
          - ubuntu-20.04
        compiler:
          # - gcc
          - llvm-11
        build_type:
          - DEBUG
          # - RELEASE

        include:
          - os: ubuntu-latest
            compiler: gcc
            build_type: RELEASE
          - os: ubuntu-latest
            compiler: llvm
            build_type: RELEASE

    # ==========================================================================
    #     Steps
    # ==========================================================================

    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: Setup C++
        uses: aminya/setup-cpp@v0.22.0
        with:
          compiler: ${{ matrix.compiler }}
          cmake: true

      - name: Install Dependencies
        if: runner.os == 'linux'
        run: |
          sudo apt-get install autoconf liblzma-dev libbz2-dev

      - name: Configure
        run: |
          export GENESIS_DEBUG=ON
          export GENESIS_USE_OPENMP=ON
          export GENESIS_USE_HTSLIB=ON
          if [[ "${{ matrix.build_type }}" == "RELEASE" ]]; then export GENESIS_DEBUG=OFF; fi

          cmake -S . -B ./build -DGENESIS_USE_OPENMP=${GENESIS_USE_OPENMP} -DGENESIS_USE_HTSLIB=${GENESIS_USE_HTSLIB}

      - name: Build
        run: |
          if [[ ! -z "${LLVM_PATH}" ]]; then
            export LDFLAGS=`echo ${LDFLAGS} | sed 's/"//g'`
            export CPPFLAGS=`echo ${CPPFLAGS} | sed 's/"//g'`
          fi
          cmake --build ./build -- -j 2

      - name: Unix - Tests
        if: >
          runner.os != 'Windows' &&
          matrix.build_type == 'DEBUG'
        run: |
          ./bin/test/genesis_tests
